" syntax
syntax on

" disable default vim startup
set shortmess+=I

" line numbers and relative line numbers
set rnu
set nu

" status line
set laststatus=2

" backspace over anything
set backspace=indent,eol,start

" allows hidden buffers with unsaved changes
set hidden

" hide mode
set noshowmode

" makes search case-smart
set ignorecase
set smartcase

" search as you type
set incsearch

" enable mouse support
set mouse+=a

" disable bell noise
set noerrorbells visualbell t_vb=

" highlight search
set hls

" extend history
set history=8192

" split pane
set splitbelow
set splitright

" tabstops
set tabstop=2 shiftwidth=2 expandtab

" omnicompletion
filetype plugin on
set omnifunc=syntaxcomplete#Complete

" block in normal mode, beam in insert mode
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

" Keybindings
" auto-compile LaTeX files
autocmd BufWritePost *.tex silent! execute "!pdflatex % >/dev/null 2&1" | redraw!

" macro to substituate > S
nnoremap S :%s//g<Left><Left>

" Ctrl-p to Rg
nmap <C-p> :Rg<CR>

" toggle netrw
let g:netrw_winsize = 20
let g:netrw_liststyle = 3
nmap <C-h> :Lexplore<CR>

" copy-paste to system buffer
set clipboard+=unnamedplus

" syntax highlight for .md code blocks
let g:markdown_fenced_languages = ['html', 'python', 'bash=sh', 'java']

" plugins
" vim-plug automatic installation
if has('nvim')
  if empty(glob('~/.local/share/nvim/site/autoload/plug.vim'))
    silent !curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs
      \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
  endif
else
  if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
      \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
  endif
endif

call plug#begin('~/.vim/plugsrc')

" util
" Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
" Plug 'junegunn/fzf.vim'
" 
" " wiki
" Plug 'vimwiki/vimwiki'
" 
" " tpope
" Plug 'tpope/vim-fugitive'
" Plug 'tpope/vim-surround'
" Plug 'tpope/vim-commentary'
" Plug 'tpope/vim-unimpaired'
" Plug 'tpope/vim-vinegar'
" 
" " gui
" Plug 'airblade/vim-gitgutter'
" 
" " colorscheme
" Plug 'morhetz/gruvbox'
" Plug 'dracula/vim', { 'as': 'dracula' }
" 
" " language
" Plug 'neoclide/coc.nvim', {'branch': 'release'}
" Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
" 
" " golang
" Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

call plug#end()

" Plugin configuration
" fzf
" window
let g:fzf_layout = { 'window': { 'width': 0.8, 'height': 0.5, 'highlight': 'Comment' } }

" colors
" highlight normal ctermbg=black
set bg=dark
highlight clear SignColumn
" autocmd vimenter * ++nested colorscheme gruvbox
let g:dracula_italic = 0
colorscheme dracula

" vimwiki
let g:vimwiki_list = [{'path': '~/projects/knowledge/src/',
                      \ 'syntax': 'markdown', 'ext': '.md'}]

" coc extensions
let g:coc_global_extensions = ['coc-pyright', 'coc-go', 'coc-sh', 'coc-java']

" treesitter configuation
lua <<EOF
require'nvim-treesitter.configs'.setup {
  ensure_installed = { "bash", "c", "go", "java", "latex", "python", "vim" },
  sync_install = false,
  highlight = {
    enable = true,
    -- Setting this to true will run `:h syntax` and tree-sitter at the same time.
    -- Set this to `true` if you depend on 'syntax' being enabled (like for indentation).
    -- Using this option may slow down your editor, and you may see some duplicate highlights.
    -- Instead of true it can also be a list of languages
    additional_vim_regex_highlighting = false,
  },
}
EOF
